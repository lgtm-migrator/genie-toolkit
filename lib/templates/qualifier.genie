// -*- mode: js; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2019-2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Silei Xu <silei@cs.stanford.edu>
//         Giovanni Campagna <gcampagn@cs.stanford.edu>

import { Ast } from 'thingtalk';

import * as C from './ast_manip';
import ThingpediaLoader from './load-thingpedia';

for (const qualifier of $loader.qualifiers) {
    time_qualifier : C.FilterSlot = {
        'in' range:constant_date_range => C.makeWikidataTimeFilter(qualifier, '==', range);
        ('before'|'earlier than') date:constant_Date => C.makeWikidataTimeFilter(qualifier, '<=', [date]); 
        ('after'|'later than') date:constant_Date => C.makeWikidataTimeFilter(qualifier, '>=', [date]);    
    } 
}


one_with_filter_table : Ast.Expression = {
    !nofilter {
        ( table:complete_table ('with' | 'having') filter:with_filter with { functionName = table.functionName } qualifier:time_qualifier with { type = filter.type }
        | table:complete_table ('with' | 'having') filter:npp_filter with { functionName = table.functionName } qualifier:time_qualifier with { type = filter.type }
        ) => C.addFilterWithQualifier($loader, table, filter, qualifier);
    }
}